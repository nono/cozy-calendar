// Generated by CoffeeScript 1.10.0
var Alarm, Event, User, ical, moment;

moment = require('moment');

ical = require('cozy-ical');

Event = require('../models/event');

Alarm = require('../models/alarm');

User = require('../models/user');

module.exports["export"] = function(req, res) {
  var calendar;
  calendar = Alarm.getICalCalendar();
  return Alarm.all((function(_this) {
    return function(err, alarms) {
      if (err) {
        return res.send({
          error: true,
          msg: 'Server error occurred while retrieving data'
        });
      } else {
        return Event.all(function(err, events) {
          var alarm, event, i, j, len, len1;
          if (err) {
            return res.send({
              error: true,
              msg: 'Server error occurred while retrieving data'
            });
          } else {
            if (alarms.length > 0) {
              for (i = 0, len = alarms.length; i < len; i++) {
                alarm = alarms[i];
                calendar.add(alarm.timezoneToIcal());
                calendar.add(alarm.toIcal());
              }
            }
            if (events.length > 0) {
              for (j = 0, len1 = events.length; j < len1; j++) {
                event = events[j];
                calendar.add(event.toIcal());
              }
            }
            res.header({
              'Content-Type': 'text/calendar'
            });
            return res.send(calendar.toString());
          }
        });
      }
    };
  })(this));
};

module.exports["import"] = function(req, res) {
  var file, parser;
  file = req.files['file'];
  if (file != null) {
    parser = new ical.ICalParser();
    return parser.parseFile(file.path, function(err, result) {
      if (err) {
        console.log(err);
        console.log(err.message);
        return res.send({
          error: 'error occured while saving file'
        }, 500);
      } else {
        return res.send({
          events: Event.extractEvents(result),
          alarms: Alarm.extractAlarms(result, User.timezone)
        });
      }
    });
  } else {
    return res.send({
      error: 'no file sent'
    }, 500);
  }
};
