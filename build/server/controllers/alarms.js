// Generated by CoffeeScript 1.10.0
var Alarm, User;

User = require('../models/user');

Alarm = require('../models/alarm');

module.exports.fetch = function(req, res, next, id) {
  return Alarm.find(id, (function(_this) {
    return function(err, alarm) {
      if (err || !alarm) {
        return res.send({
          error: true,
          msg: "Alarm not found"
        }, 404);
      } else {
        req.alarm = alarm;
        return next();
      }
    };
  })(this));
};

module.exports.all = function(req, res) {
  return Alarm.all((function(_this) {
    return function(err, alarms) {
      var alarm, i, index, len;
      if (err) {
        return res.send({
          error: 'Server error occurred while retrieving data'
        });
      } else {
        for (index = i = 0, len = alarms.length; i < len; index = ++i) {
          alarm = alarms[index];
          alarms[index] = alarm.timezoned();
        }
        return res.send(alarms);
      }
    };
  })(this));
};

module.exports.read = function(req, res) {
  return res.send(req.alarm.timezoned());
};

module.exports.create = function(req, res) {
  var data;
  data = Alarm.toUTC(req.body);
  return Alarm.create(data, (function(_this) {
    return function(err, alarm) {
      if (err) {
        return res.send({
          error: "Server error while creating alarm."
        }, 500);
      } else {
        alarm = alarm.timezoned();
        return res.send(alarm, 201);
      }
    };
  })(this));
};

module.exports.update = function(req, res) {
  var data;
  data = Alarm.toUTC(req.body);
  return req.alarm.updateAttributes(data, (function(_this) {
    return function(err, alarm) {
      if (err != null) {
        return res.send({
          error: "Server error while saving alarm"
        }, 500);
      } else {
        alarm = alarm.timezoned();
        return res.send(alarm, 200);
      }
    };
  })(this));
};

module.exports["delete"] = function(req, res) {
  return req.alarm.destroy(function(err) {
    if (err != null) {
      return res.send({
        error: "Server error while deleting the alarm"
      }, 500);
    } else {
      return res.send({
        success: true
      }, 200);
    }
  });
};
